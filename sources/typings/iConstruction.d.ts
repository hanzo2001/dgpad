/// <reference path="./iCoordsSystem.d.ts" />

interface iConstruction {
	mouseX;
	mouseY;
	prefs;
	coordsSystem: iCoordsSystem;
	paint;
	computeAll;
	createTurtleExpression(_startpt:string): any;
	removeTurtleExpression(_startpt:string);
	getObjectsFromType(_t:string): any[];
	isDragOnlyMoveable(): boolean;
	setDragOnlyMoveable(_d:boolean);
	isDEG(): boolean;
	setDEG(_d:boolean);
	cos(_a:number): number;
	sin(_a:number): number;
	tan(_a:number): number;
	getInterpreter(): Interpreter;
	getTrackManager(): iTrackManager;
	getVarName(_n:string);
	isVarName(_n): boolean;
	getCanvas();
	getSerial(): number;
	getBounds();
	getHeight(): number;
	getWidth(): number;
	reconstructChilds();
	setMode(_mode:number);
	getMode(): number;
	isMode(...args:number[]): boolean;
	isConsultOrArrowMode(): boolean;
	isConsultMode(): boolean;
	isArrowMode(): boolean;
	isHideMode(): boolean;
	isDeleteMode(): boolean;
	isMacroMode(): boolean;
	isMacroEXEMode(): boolean;
	isPropertiesMode(): boolean;
	add(_obj);
	Quickadd(_obj);
	deleteAll();
	setAllSize(_type, size:number);
	setAllSegSize(_type, size:number);
	setAllColor(_type, color:string);
	setAllOpacity(_type, alpha:number);
	setAllLayer(_type, _lay);
	setAllPtShape(_shape);
	setAllFontSize(_type, size:number);
	setAllPrecision(_type, precision:number);
	setAllIncrement(_type, _v);
	setAllDash(_type, _v);
	setAll360(_type, _is360:boolean);
	setAllTrigo(_type, _t);
	setAllNoMouse(_type, _v);
	elements();
	isEmpty(): boolean;
	zoom(_x:number, _y:number, _h:number);
	translate(_x:number, _y:number);
	translateANDzoom(_xt:number, _yt:number, _xz:number, _yz:number, _h:number);
	findCoincidents(_t);
	getNames(): string[];
	find(oName:string);
	findVar(vName:string);
	getSubName(_n): string;
	getUnusedName(_n:string, _o);
	findFreePoints(_o);
	remove(_o);
	safelyDelete(_o);
	addIndicated(obj);
	clearIndicated();
	getIndicated();
	getFirstIndicatedPoint();
	getLastPoint();
	getSelected();
	addSelected(obj);
	clearSelected();
	getObjectsUnderMouse(ev);
	doOrder(_tab);
	orderObjects();
	validate(ev);
	compute();
	get3DOrigin(_P);
	isOrigin3D(_P);
	setOrigin3D(_P);
	set3DMode(mode:boolean);
	is3DMode();
	set3D(mode:boolean);
	is3D();
	getPhi();
	getTheta();
	setcompute3D_filter(_proc);
	clearcompute3D_filter();
	computeChilds(t);
	computeMagnetObjects();
	isAxisUsed();
	getSource();
	findPtOn(_obj);
	clearMacroMode();
	macroConstructionTag(obj);
	macroExecutionTag(obj);
	resizeBtn();
	showAnimations(_b);
	findInAnimations(_o);
	getAnimationSpeed(_o);
	setAnimationSpeed(_o, _v);
	addAnimation(_o, _v, _d, _m);
}
